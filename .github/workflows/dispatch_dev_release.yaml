name: "[Dispatch] Dev Release"

on:
  workflow_dispatch:

env:
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL_TEST_EMPTY }}

jobs:
  versioning:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.versioning.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v2
      - name: get current date
        run: |
          sudo ln -sf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
          echo "TIME=$(date +'%Y%m%d.%H%M%S')" >> $GITHUB_ENV
      - name: set version with current date
        id: versioning
        run: |
          echo "VERSION=$(cat src/VERSION).${{ env.TIME }}" >> $GITHUB_OUTPUT
      - name: Notice when job fails
        if: failure()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,workflow,job
          author_name: Github Action Slack

  docker:
    runs-on: ubuntu-latest
    needs: versioning
    env:
      VERSION: ${{ needs.versioning.outputs.version }}
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push (Dev Private ECR)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.ECR_REPO }}:${{ env.VERSION }}

  notification:
    if: ${{ env.SLACK_WEBHOOK_URL }}
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Slack
        if: always()
        uses: 8398a7/action-slack@v3.2.0
        with:
          status: ${{job.status}}
          fields: repo,message,commit,author,action,ref,workflow,job
          author_name: Github Action Slack
